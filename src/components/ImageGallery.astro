---
import { images } from '../data/imageGalleryItems';
import ImageGalleryItem from './ImageGalleryItem.astro';

export interface Props {
	title: string
}

const { title } = Astro.props;
---
<>
    <h3 class="font-sans text-center text-3xl mb-12">{title}</h3>

    {images.length > 0 && (
        <ul id="gallery-ah" class="grid grid-cols-2 gap-6">
            {images.map(image => (
                image.caption ? <ImageGalleryItem image={image.image} alt={image.alt} caption={image.caption} /> : <ImageGalleryItem image={image.image} alt={image.alt} />
            ))}
        </ul>
    )}

    <script is:inline>
        import PhotoSwipeLightbox from 'photoswipe/lightbox';
        import 'photoswipe/style.css';

        const options = {
            gallery: '#gallery-ah',
            children: 'li',
            pswpModule: () => import('photoswipe')
        };

        const lightbox = new PhotoSwipeLightbox(options);
        lightbox.on('uiRegister', function() {
            lightbox.pswp.ui.registerElement({
                name: 'custom-caption',
                order: 9,
                isButton: false,
                appendTo: 'root',
                html: 'Caption text',
                onInit: (el, pswp) => {
                    lightbox.pswp.on('change', () => {
                        const currSlideElement = lightbox.pswp.currSlide.data.element;
                        let captionHTML = '';
                        if (currSlideElement) {
                            const hiddenCaption = currSlideElement.querySelector('.hidden-caption-content');

                            if (hiddenCaption) {
                                // get caption from element with class hidden-caption-content
                                captionHTML = hiddenCaption.innerHTML;
                            } else {
                                // get caption from alt attribute
                                captionHTML = currSlideElement.querySelector('img').getAttribute('alt');
                            }
                        }

                        el.classList.add('text-white', 'bg-black', 'absolute', 'bottom-0', 'left-1/2', 'transform', '-translate-x-1/2', 'text-center', 'p-2', 'max-w-prose', 'mx-auto', 'empty:hidden');

                        el.innerHTML = captionHTML || '';
                    });
                }
            });
        });

        lightbox.init();
    </script>
    
</>
